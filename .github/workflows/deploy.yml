name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Deploy to Railway
        run: |
          echo "Railway will auto-deploy from GitHub push"
          
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        working-directory: ./vridge_front
        run: |
          rm -rf node_modules package-lock.json
          npm install
        
      - name: Build project
        working-directory: ./vridge_front
        env:
          REACT_APP_API_BASE_URL: https://videoplanet.up.railway.app/api
          REACT_APP_BACKEND_API_URL: https://videoplanet.up.railway.app/api
          REACT_APP_BACKEND_URI: https://videoplanet.up.railway.app
          REACT_APP_SOCKET_URI: wss://videoplanet.up.railway.app
          CI: false
        run: npm run build
        
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: Deploy to Vercel
        working-directory: ./vridge_front
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel --prod --token=$VERCEL_TOKEN --yes
          
  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Send notification
        run: |
          echo "Deployment completed!"
          echo "Backend: https://videoplanet.up.railway.app"
          echo "Frontend: https://vlanet.net"
# Vultr $6/월 서버 최적화 Docker Compose
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: vridge_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-vridge}
      POSTGRES_USER: ${DB_USER:-vridge}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-vridge}"]
      interval: 30s
      timeout: 10s
      retries: 5
    # Vultr 1GB RAM 최적화
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 200M
    command: >
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=400MB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  redis:
    image: redis:7-alpine
    container_name: vridge_redis
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --maxmemory 100mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  backend:
    build:
      context: ./vridge_back
      dockerfile: Dockerfile.vultr
    container_name: vridge_backend
    restart: unless-stopped
    environment:
      - DJANGO_ENV=production
      - PYTHONUNBUFFERED=1
      - VULTR_OPTIMIZED=true
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
      - ./vridge_back/.env:/app/.env:ro
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 350M
        reservations:
          memory: 250M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  frontend:
    build:
      context: ./vridge_front
      dockerfile: Dockerfile.vultr
    container_name: vridge_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx/vultr.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 60s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  default:
    driver: bridge
name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Deploy to Railway
        run: |
          echo "Railway will auto-deploy from GitHub push"
          
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Verify environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Working directory: $(pwd)"
          ls -la vridge_front/
          
      - name: Install dependencies
        working-directory: ./vridge_front
        run: |
          # Clean install to ensure consistency
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps --silent
        
      - name: Verify build environment
        working-directory: ./vridge_front
        run: |
          # Check if all required files exist
          if [ ! -f "package.json" ]; then
            echo "ERROR: package.json not found"
            exit 1
          fi
          
          if [ ! -f "vercel.json" ]; then
            echo "ERROR: vercel.json not found"
            exit 1
          fi
          
          echo "Build environment verified"

      - name: Build project
        working-directory: ./vridge_front
        env:
          REACT_APP_API_BASE_URL: https://vridge-back-production.up.railway.app
          REACT_APP_BACKEND_API_URL: https://vridge-back-production.up.railway.app
          REACT_APP_BACKEND_URI: https://vridge-back-production.up.railway.app
          REACT_APP_SOCKET_URI: wss://vridge-back-production.up.railway.app
          CI: false
          GENERATE_SOURCEMAP: false
        run: |
          set -e
          echo "Starting build with environment variables:"
          printenv | grep REACT_APP_ || true
          
          # Show package.json scripts for debugging
          echo "Available npm scripts:"
          npm run
          
          # Run build with verbose output
          echo "Running npm build..."
          npm run build --verbose
          
          # Verify build output
          if [ ! -d "build" ]; then
            echo "ERROR: Build directory not created"
            exit 1
          fi
          
          echo "Build completed successfully"
          ls -la build/
        
      - name: Prepare Vercel deployment
        run: |
          cd vridge_front
          # Create .vercel directory structure
          mkdir -p .vercel/output/static
          # Copy build files
          cp -r build/* .vercel/output/static/
          # Create config.json
          echo '{"version": 3}' > .vercel/output/config.json
          
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --prebuilt --cwd ./vridge_front'
          
  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Send notification
        run: |
          echo "Deployment completed!"
          echo "Backend: https://videoplanet.up.railway.app"
          echo "Frontend: https://vlanet.net"
# GCP 최적화 React Dockerfile
FROM node:18-alpine as builder

# 작업 디렉토리 설정
WORKDIR /app

# 패키지 파일 복사 및 의존성 설치
COPY package*.json ./
RUN npm ci --only=production --silent

# 소스 코드 복사
COPY . .

# GCP 환경 변수 설정
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV DISABLE_ESLINT_PLUGIN=true
ENV FAST_REFRESH=false

# 빌드 실행
RUN npm run build

# 프로덕션 스테이지
FROM nginx:alpine

# 필수 패키지 설치
RUN apk add --no-cache \
    curl \
    certbot \
    certbot-nginx \
    openssl

# Nginx 설정
COPY --from=builder /app/build /usr/share/nginx/html
COPY nginx.gcp.conf /etc/nginx/conf.d/default.conf

# SSL 인증서 디렉토리 생성
RUN mkdir -p /etc/nginx/ssl

# 자체 서명 인증서 생성 (임시용)
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/ssl/selfsigned.key \
    -out /etc/nginx/ssl/selfsigned.crt \
    -subj "/C=KR/ST=Seoul/L=Seoul/O=VideoPlanet/OU=IT/CN=localhost"

# 포트 노출
EXPOSE 80 443

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# 시작 스크립트
COPY docker-entrypoint-nginx.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]